// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";

export let options = { 
  maxRedirects: 4, 
  duration: '10s', 
  vus: 15
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    ipCiam: "https://dev.ciam.hijra.id/api/v1",
    access_token: "",
    email: "decococox@getnada.com",
    password: "Batubata123!",
    id_admin: ""
  }
});

export default function() {
  postman[Request]({
    name: "Login",
    id: "6adaf379-017a-4f79-9bad-c61a53d4ea1f",
    method: "POST",
    address: "{{ipCiam}}/auth/sign-in-backoffice",
    data:
      '{\n    "email" : "decococox@getnada.com",\n    "passwd" : "Batubata123!"\n}',
    headers: { 
      'Platform': 'BACKOFFICE', 
      'Content-Type': 'application/json'
    },
    post(response) {
      var parsingResult = JSON.parse(responseBody);
      postman.setEnvironmentVariable(
        "access_token",
        parsingResult.data.accessToken
      );
    }
  });

  postman[Request]({
    name: "Get Admin List",
    id: "454a3f46-a227-4d47-a584-7a8b13c53d92",
    method: "GET",
    address: "{{ipCiam}}/users-backoffice?page=0&size=10&getall=false",
    headers: {
      'Platform': 'BACKOFFICE'
    },
    post(response) {
      var parsingResult = JSON.parse(responseBody);
      postman.setEnvironmentVariable(
        "id_admin",
        parsingResult.data.content[0].id
      );
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("access_token")}`;
    }
  });

  postman[Request]({
    name: "Update Unfreeze",
    id: "1415797c-b32a-4085-b9c7-48a9e18ee8d6",
    method: "PUT",
    address: "{{ipCiam}}/users-backoffice/{{id_admin}}/enabled",
    headers: {
      'Platform': 'BACKOFFICE'
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("access_token")}`;
    }
  });
}
